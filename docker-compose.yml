version: '3.7'

networks:
  default:
    name: plugindev_default

services:
  # nginx - web server
  nginx:
    build:
      context: ./.docker-config/nginx
      dockerfile: ./Dockerfile
    init: true
    ports:
      - "8003:8003"
      - "8004:8004"
    volumes:
      - cpresources_v3:/var/www/project/cms_v3/web/cpresources:delegated
      - cpresources_v4:/var/www/project/cms_v4/web/cpresources:delegated
      - ./cms_v3/web:/var/www/project/cms_v3/web:cached
      - ./cms_v4/web:/var/www/project/cms_v4/web:cached
  # mysql - database
  mysql:
    build:
      context: ./.docker-config/mysql
      dockerfile: ./Dockerfile
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASES: "project_v3 project_v4 test"
      MYSQL_USER: project
      MYSQL_PASSWORD: project
    init: true
    ports:
      - "33060:3306"
    volumes:
      - mysql-db-data:/var/lib/mysql
      - ./db-seed/mysql:/docker-entrypoint-initdb.d
  # php_v3 - run php-fpm
  php_v3:
    build: &php-build_v3
      context: ./.docker-config/php-prod-craft
      dockerfile: ./Dockerfile
    depends_on:
      - "mysql"
      - "postgres"
      - "redis"
    env_file: &env_v3
      - ./cms_v3/.env
    init: true
    stop_grace_period: "1s"
    tty: true
    volumes: &php-volumes_v3
      # Change the path below to map to your local plugin repositories
      - /Users/andrew/webdev/craft_v3:/Users/andrew/webdev/craft_v3
      - cpresources_v3:/var/www/project/cms_v3/web/cpresources:delegated
      - storage_v3:/var/www/project/cms_v3/storage:delegated
      - ./cms_v3:/var/www/project/cms_v3:cached
      # Specific directories that need to be bind-mounted
      - ./cms_v3/storage/logs:/var/www/project/cms_v3/storage/logs:delegated
      - ./cms_v3/storage/runtime/compiled_templates:/var/www/project/cms_v3/storage/runtime/compiled_templates:delegated
      - ./cms_v3/storage/runtime/compiled_classes:/var/www/project/cms_v3/storage/runtime/compiled_classes:delegated
      - ./cms_v3/vendor:/var/www/project/cms_v3/vendor:delegated
      - ./cms_v3/storage/rebrand:/var/www/project/cms_v3/storage/rebrand:delegated
  # php_v4 - run php-fpm
  php_v4:
    build: &php-build_v4
      context: ./.docker-config/php-prod-craft
      dockerfile: ./Dockerfile
    depends_on:
      - "mysql"
      - "postgres"
      - "redis"
    env_file: &env_v4
      - ./cms_v4/.env
    init: true
    stop_grace_period: "1s"
    tty: true
    volumes: &php-volumes_v4
      # Change the path below to map to your local plugin repositories
      - /Users/andrew/webdev/craft_v4:/Users/andrew/webdev/craft_v4
      - cpresources_v4:/var/www/project/cms_v4/web/cpresources:delegated
      - storage_v4:/var/www/project/cms_v4/storage:delegated
      - ./cms_v4:/var/www/project/cms_v4:cached
      # Specific directories that need to be bind-mounted
      - ./cms_v4/storage/logs:/var/www/project/cms_v4/storage/logs:delegated
      - ./cms_v4/storage/runtime/compiled_templates:/var/www/project/cms_v4/storage/runtime/compiled_templates:delegated
      - ./cms_v4/storage/runtime/compiled_classes:/var/www/project/cms_v4/storage/runtime/compiled_classes:delegated
      - ./cms_v4/vendor:/var/www/project/cms_v4/vendor:delegated
      - ./cms_v4/storage/rebrand:/var/www/project/cms_v4/storage/rebrand:delegated
  # php_xdebug_v3 - run php-fpm with xdebug
  php_xdebug_v3:
    build:
      context: ./.docker-config/php-dev-craft
      dockerfile: ./Dockerfile
    depends_on:
      - "php_v3"
    env_file:
      *env_v3
    init: true
    stop_grace_period: "1s"
    tty: true
    volumes:
      *php-volumes_v3
  # php_xdebug_v4 - run php-fpm with xdebug
  php_xdebug_v4:
    build:
      context: ./.docker-config/php-dev-craft
      dockerfile: ./Dockerfile
    depends_on:
      - "php_v4"
    env_file:
      *env_v4
    init: true
    stop_grace_period: "1s"
    tty: true
    volumes:
      *php-volumes_v4
  # postgres - database
  postgres:
    build:
      context: ./.docker-config/postgres
      dockerfile: ./Dockerfile
    environment:
      POSTGRES_DATABASES: "project_v3 project_v4 test"
      POSTGRES_USER: project
      POSTGRES_PASSWORD: project
    init: true
    ports:
      - "54320:5432"
    volumes:
      - postgres-db-data:/usr/local/pgsql/data
      - ./db-seed/postgres:/docker-entrypoint-initdb.d
  # queue_v3 - runs queue jobs via php craft queue/listen
  queue_v3:
    build:
      *php-build_v3
    command: /var/www/project/run_queue.sh
    depends_on:
      - "php_v3"
    env_file:
      *env_v3
    init: true
    stop_grace_period: "1s"
    tty: true
    volumes:
      *php-volumes_v3
  # queue_v4 - runs queue jobs via php craft queue/listen
  queue_v4:
    build:
      *php-build_v4
    command: /var/www/project/run_queue.sh
    depends_on:
      - "php_v4"
    env_file:
      *env_v4
    init: true
    stop_grace_period: "1s"
    tty: true
    volumes:
      *php-volumes_v4
  # redis - key/value database for caching & php sessions
  redis:
    build:
      context: ./.docker-config/redis
      dockerfile: ./Dockerfile
    expose:
      - "6379"
    init: true

volumes:
  mysql-db-data:
  postgres-db-data:
  cpresources_v3:
  cpresources_v4:
  storage_v3:
  storage_v4:
